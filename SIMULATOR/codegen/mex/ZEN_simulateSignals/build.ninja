# CompilerName=mingw64
# Mode=optim
ninja_required_version = 1.3

# Basic folders
root = .
builddir = $root\build\win64
matlabdir = C:\Program Files\Polyspace\R2019a
startdir = C:\Users\minh\Documents\my work\object-tracking\SIMULATOR

# Toolchain information
cc = C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev2\mingw64\bin\gcc
cxx = C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev2\mingw64\bin\g++
linker = C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev2\mingw64\bin\gcc
linkerxx = C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev2\mingw64\bin\g++

cflags =  -c -fexceptions -fno-omit-frame-pointer -m64 -DMATLAB_MEX_FILE  -DMATLAB_MEX_FILE -O2 -fwrapv -DNDEBUG -std=c99 -I "$root" -I "$startdir" -I "$root\interface" -I "$matlabdir\extern\include" -I "." -D__USE_MINGW_ANSI_STDIO=1 -fopenmp 

cxxflags =  -c -fexceptions -fno-omit-frame-pointer -std=c++11 -m64 -DMATLAB_MEX_FILE  -DMATLAB_MEX_FILE -O2 -fwrapv -DNDEBUG -std=c++11 -I "$root" -I "$startdir" -I "$root\interface" -I "$matlabdir\extern\include" -I "." -D__USE_MINGW_ANSI_STDIO=1 -fopenmp 

ldflags =  -m64 -Wl,--no-undefined -shared -static -L"$matlabdir\extern\lib\win64\mingw64" -llibmx -llibmex -llibmat -lm -llibmwlapack -llibmwblas -o "ZEN_simulateSignals_mex.mexw64" -llibemlrt -llibcovrt -llibut -llibmwmathutil -fopenmp -Wl,--version-script,ZEN_simulateSignals_mex.map

# Build Rules
rule cc
    command = $cc $cflags $in -o $out

rule cxx
    command = $cxx $cxxflags $in -o $out

rule link
    command = $linker $in $ldflags

rule linkxx
    command = $linkerxx $in $ldflags

# Build
build $builddir\ZEN_simulateSignals_mexutil.o : cc $root\ZEN_simulateSignals_mexutil.c
build $builddir\ZEN_simulateSignals_data.o : cc $root\ZEN_simulateSignals_data.c
build $builddir\ZEN_simulateSignals_initialize.o : cc $root\ZEN_simulateSignals_initialize.c
build $builddir\ZEN_simulateSignals_terminate.o : cc $root\ZEN_simulateSignals_terminate.c
build $builddir\ZEN_simulateSignals.o : cc $root\ZEN_simulateSignals.c
build $builddir\ZEN_generateDeterministicTrajectory.o : cc $root\ZEN_generateDeterministicTrajectory.c
build $builddir\eml_int_forloop_overflow_check.o : cc $root\eml_int_forloop_overflow_check.c
build $builddir\interp1.o : cc $root\interp1.c
build $builddir\ZEN_generateSonar.o : cc $root\ZEN_generateSonar.c
build $builddir\power.o : cc $root\power.c
build $builddir\scalexpAlloc.o : cc $root\scalexpAlloc.c
build $builddir\randn.o : cc $root\randn.c
build $builddir\eml_randn.o : cc $root\eml_randn.c
build $builddir\eml_rand.o : cc $root\eml_rand.c
build $builddir\eml_rand_mcg16807_stateful.o : cc $root\eml_rand_mcg16807_stateful.c
build $builddir\eml_rand_shr3cong_stateful.o : cc $root\eml_rand_shr3cong_stateful.c
build $builddir\eml_rand_mt19937ar_stateful.o : cc $root\eml_rand_mt19937ar_stateful.c
build $builddir\_coder_ZEN_simulateSignals_info.o : cc $root\interface\_coder_ZEN_simulateSignals_info.c
build $builddir\_coder_ZEN_simulateSignals_api.o : cc $root\interface\_coder_ZEN_simulateSignals_api.c
build $builddir\_coder_ZEN_simulateSignals_mex.o : cc $root\interface\_coder_ZEN_simulateSignals_mex.c
build $builddir\ZEN_simulateSignals_emxutil.o : cc $root\ZEN_simulateSignals_emxutil.c
build $builddir\c_mexapi_version.o : cc $matlabdir\extern\version\c_mexapi_version.c

# Link
build $root\ZEN_simulateSignals_mex.mexw64 : link $builddir\ZEN_simulateSignals_mexutil.o $builddir\ZEN_simulateSignals_data.o $builddir\ZEN_simulateSignals_initialize.o $builddir\ZEN_simulateSignals_terminate.o $builddir\ZEN_simulateSignals.o $builddir\ZEN_generateDeterministicTrajectory.o $builddir\eml_int_forloop_overflow_check.o $builddir\interp1.o $builddir\ZEN_generateSonar.o $builddir\power.o $builddir\scalexpAlloc.o $builddir\randn.o $builddir\eml_randn.o $builddir\eml_rand.o $builddir\eml_rand_mcg16807_stateful.o $builddir\eml_rand_shr3cong_stateful.o $builddir\eml_rand_mt19937ar_stateful.o $builddir\_coder_ZEN_simulateSignals_info.o $builddir\_coder_ZEN_simulateSignals_api.o $builddir\_coder_ZEN_simulateSignals_mex.o $builddir\ZEN_simulateSignals_emxutil.o $builddir\c_mexapi_version.o 
