%% ************************************************************************
%
%           Description : simulate complete dynamics and sonar signals
%                           
%
%           Author : G.M. Hoang
%
%           Rev. 0 : baseline
%
%           Inputs : 
%                       - Params : struct containing simulation parameters 
%                       - Profile : struct containing profile parameters
%           Outputs : 
%                       - Signals : struct containing all signals generated by simulation
%
% *************************************************************************

function [signals] = ZEN_simulateSignals(paramsSim, profile)

coder.extrinsic('disp')
coder.extrinsic('cputime')
coder.extrinsic('num2str','tic','toc')

%% ************************************************************************
%
%                       Dynamics signals generation
%
% *************************************************************************

if paramsSim.displayText
    disp('Trajectory generation...')
end

tic;
if paramsSim.useRandomTrajectory
    % for future use 
    [signals] = ZEN_generateDeterministicTrajectory(paramsSim); % TBD
else
    [signals] = ZEN_generateDeterministicTrajectory(paramsSim);
end

paramsSim.Npts = length(signals.t);

deltaT1=toc;
if paramsSim.displayText
    disp(['End of trajectory generation (Processing time =', num2str(deltaT1),' s)'])
    disp('Sonar signals generation...');
end

%% ************************************************************************
%
%                       Sonar signals generation
%
% *************************************************************************

tic
signals = ZEN_generateSonar(signals, profile);
deltaT2 = toc;
if paramsSim.displayText
    disp(['End of sonar signals generation (Processing time =', num2str(deltaT2),' s)'])
end
 
end

